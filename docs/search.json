[{"path":"index.html","id":"regressions-and-causal-inference","chapter":"“Regressions and Causal Inference”","heading":"“Regressions and Causal Inference”","text":" Welcome site course PS9591: “Regressions Causal Inference” Western University, taught Sebastián Vallejo Vera. week, find lecture slides, lecture code, lab exercises, lab code corresponding topic.class divided lectures tutorials. go lectures tutorials simultaneously. Thus, arranged website way shows suggested order lecture tutorials carried .start, don’t forget read Syllabus check Perusall readings course. site corrected/updated throughout semester(s).","code":""},{"path":"index.html","id":"about-tutorials","chapter":"“Regressions and Causal Inference”","heading":"0.1 About Tutorials","text":"tutorials interactive R documents can also run computer. allows practice concepts experiment different approaches pace. ’s get started.","code":""},{"path":"index.html","id":"prerequisites","chapter":"“Regressions and Causal Inference”","heading":"0.1.1 Prerequisites","text":"running tutorials, make sure :R installed computer (version 4.0.0 higher)RStudio installed (recent version)following R packages installed. can install running commands R:","code":"\n# Install required packages\ninstall.packages(\"learnr\")\ninstall.packages(\"wooldridge\")\ninstall.packages(\"tidyverse\")\ninstall.packages(\"tidylog\")\ninstall.packages(sjPlot) # to plot some models\ninstall.packages(readstata13) # to load .dta files"},{"path":"index.html","id":"running-a-tutorial","chapter":"“Regressions and Causal Inference”","heading":"0.1.2 Running a Tutorial","text":"two ways run tutorial locally:","code":""},{"path":"index.html","id":"method-1-using-rstudio","chapter":"“Regressions and Causal Inference”","heading":"0.1.2.1 Method 1: Using RStudio","text":"Download tutorial file (.Rmd extension)Open RStudioClick “Run Document” button top editorThe tutorial open new window","code":""},{"path":"index.html","id":"method-2-using-r-console","chapter":"“Regressions and Causal Inference”","heading":"0.1.2.2 Method 2: Using R Console","text":"tutorial file working directory, can run:Replace “filename” name tutorial file (without .Rmd extension).","code":"\nrmarkdown::run_tutorial(\"filename\", package = \"learnr\")"},{"path":"index.html","id":"tips-for-success","chapter":"“Regressions and Causal Inference”","heading":"0.1.3 Tips for Success","text":"working tutorials locally:Make sure required packages loaded tutorial’s setup chunkIf modify tutorial code, save file runningTo clear tutorial cache start fresh, just click “Start ” button bottom left corner.","code":""},{"path":"index.html","id":"troubleshooting-common-issues","chapter":"“Regressions and Causal Inference”","heading":"0.1.4 Troubleshooting Common Issues","text":"encounter problems:Tutorial won’t knit: Check required packages installedExercise chunks don’t run: Verify learnr properly loadedPrevious answers persist: Clear cache using code provided abovePackage found: Run install.packages() missing package","code":""},{"path":"index.html","id":"getting-help","chapter":"“Regressions and Causal Inference”","heading":"0.1.5 Getting Help","text":"need assistance:Check tutorial error messages specific package requirementsReview setup chunk missing dependenciesConsult learnr documentationAsk questions office hours send e-mailAsk ChatGPT (?)","code":""},{"path":"index.html","id":"next-steps","chapter":"“Regressions and Causal Inference”","heading":"0.1.6 Next Steps","text":"getting tutorials running locally, can:Experiment modifying codeCreate practice exercisesTry different approaches analysis tasksSave work future referenceRemember tutorials learning tools. Feel free experiment try different approaches – ’s learn best!","code":""},{"path":"index.html","id":"assignments","chapter":"“Regressions and Causal Inference”","heading":"0.2 Assignments","text":"list assignments course. assignments must handed pdf documents using R Markdown.","code":""},{"path":"index.html","id":"final-exam","chapter":"“Regressions and Causal Inference”","heading":"0.3 Final Exam","text":"final exam require students replicate findings papers, interpret results. Final Exam, post required datasets replication exercise :COMING SOON…","code":""},{"path":"index.html","id":"acknowledgments","chapter":"“Regressions and Causal Inference”","heading":"0.4 Acknowledgments","text":"organization course based great textbook ‘Effect: Introduction Research Design Causality’ Nick Huntington-Klein, freely available . code used throughout main lectures patchwork code, code borrows heavily internet (’s true code). try best give credit original authors code (possible). code labs created revised two amazing doctoral students1 Western University, Hugo Machado John Santos (posted permission).","code":""},{"path":"lecture-1-what-is-causal-inference.html","id":"lecture-1-what-is-causal-inference","chapter":"1 Lecture 1: What is Causal Inference?","heading":"1 Lecture 1: What is Causal Inference?","text":"","code":""},{"path":"lecture-1-what-is-causal-inference.html","id":"slides","chapter":"1 Lecture 1: What is Causal Inference?","heading":"Slides","text":"2 Causal Inference? (link)","code":""},{"path":"lecture-1-what-is-causal-inference.html","id":"introduction","chapter":"1 Lecture 1: What is Causal Inference?","heading":"1.1 Introduction","text":"first week, introduce ‘causal inference’ concept interest, main problems determining causality observational data. fancy code week.lecture slide displayed full :\nFigure 1.1: Slides 2 Causal Inference?.\n","code":""},{"path":"lecture-2-introduction-to-causal-inference.html","id":"lecture-2-introduction-to-causal-inference","chapter":"2 Lecture 2: Introduction to Causal Inference","heading":"2 Lecture 2: Introduction to Causal Inference","text":"","code":""},{"path":"lecture-2-introduction-to-causal-inference.html","id":"slides-1","chapter":"2 Lecture 2: Introduction to Causal Inference","heading":"Slides","text":"3 Introduction Causal Inference (link)","code":""},{"path":"lecture-2-introduction-to-causal-inference.html","id":"introduction-1","chapter":"2 Lecture 2: Introduction to Causal Inference","heading":"2.1 Introduction","text":"now dive deeper causal inference counterfactual problem. show randomized trails solve counterfactual problem, also counterfactual problem still problem using observational data.lecture slide displayed full :\nFigure 2.1: Slides 3 Introduction Causal Inference.\n","code":"\nlibrary(tidyverse) # for wrangling data\nlibrary(tidylog) # to know what we are wrangling"},{"path":"lecture-2-introduction-to-causal-inference.html","id":"vignette-2.1","chapter":"2 Lecture 2: Introduction to Causal Inference","heading":"2.2 Vignette 2.1","text":"Usually, know data generation process, , gods. Let’s create world taking treatment (e.g., taking pill) positively affect Y (e.g., health) one unit. Let’s run experiment.Now can create counterfactual:Let’s look counterfactual:Now let’s give individual treatment (either pill placebo):can see average effect pill treated group (remember lecture effect , essence, difference receive treatment, ):can plot :","code":"\ndf <- data.frame(health_no_pill= rnorm(5000),\n                 # Randomly assign a treatment\n                 pill=sample(c(0,1),5000,replace=T))\nhist(df$health_no_pill)\nknitr::kable(table(df$pill), format=\"markdown\")\ndf <- df %>%\n  mutate(health_w_pill = health_no_pill + 1) # Our Y when A=1 aka our counterfactual## mutate: new variable 'health_w_pill' (double) with 5,000 unique values and 0% NA\nhealth_w_pill <- cbind.data.frame(df$health_w_pill,\"with Pill\")\ncolnames(health_w_pill) <- c(\"health\",\"treatment\")\nhealth_no_pill <- cbind.data.frame(df$health_no_pill,\"without Pill\")\ncolnames(health_no_pill) <- c(\"health\",\"treatment\")\ncomparison_y <- rbind.data.frame(health_w_pill,health_no_pill)\n\ncomparison_y %>%\n  group_by(treatment) %>%\n  mutate(mean_health = mean(health)) %>%\n  ungroup() %>%\n  ggplot(aes(x=health,fill = treatment,color = treatment)) +\n  geom_density(alpha = .5) +\n  scale_x_continuous(breaks = scales::pretty_breaks(n = 8)) +\n  geom_vline(aes(xintercept = mean_health, color = treatment ),\n             linetype = \"dashed\")## group_by: one grouping variable (treatment)\n## mutate (grouped): new variable 'mean_health' (double) with 2 unique values and 0% NA\n## ungroup: no grouping variables remain\ndf <- df %>%\n  mutate(health_obs = ifelse(pill==1,health_w_pill,health_no_pill))## mutate: new variable 'health_obs' (double) with 5,000 unique values and 0% NA\nhead(df,10)##    health_no_pill pill health_w_pill health_obs\n## 1      -0.3579874    1     0.6420126  0.6420126\n## 2      -2.9314199    1    -1.9314199 -1.9314199\n## 3       0.3794738    1     1.3794738  1.3794738\n## 4       2.5037990    0     3.5037990  2.5037990\n## 5       0.1542494    0     1.1542494  0.1542494\n## 6      -0.1237040    0     0.8762960 -0.1237040\n## 7       0.3576142    1     1.3576142  1.3576142\n## 8       0.1539094    1     1.1539094  1.1539094\n## 9      -0.1620332    0     0.8379668 -0.1620332\n## 10      1.1597712    1     2.1597712  2.1597712\ndf %>%\n  group_by(pill) %>%\n  summarize(health = mean(health_obs))## group_by: one grouping variable (pill)\n## summarize: now 2 rows and 2 columns, ungrouped## # A tibble: 2 × 2\n##    pill  health\n##   <dbl>   <dbl>\n## 1     0 0.00294\n## 2     1 0.997\ndf %>%\n  group_by(pill) %>%\n  mutate(mean_health_obs = mean(health_obs)) %>%\n  ungroup() %>%\n  ggplot(aes(x=health_obs,fill = factor(pill),color = factor(pill))) +\n  geom_density(alpha = .5) +\n  scale_x_continuous(breaks = scales::pretty_breaks(n = 8)) +\n  geom_vline(aes(xintercept = mean_health_obs, color = factor(pill) ),\n             linetype = \"dashed\")## group_by: one grouping variable (pill)\n## mutate (grouped): new variable 'mean_health_obs' (double) with 2 unique values and 0% NA\n## ungroup: no grouping variables remain"},{"path":"lecture-2-introduction-to-causal-inference.html","id":"vignette-2.2","chapter":"2 Lecture 2: Introduction to Causal Inference","heading":"2.3 Vignette 2.2","text":"Ok… happens randomize? observational data, …Let’s see happens now estimated mean average ‘effect’ (remember lecture effect , essence, difference receive treatment, ):Oh ! actual effect pill, know 1 since created . However, properly model (RDD!), (remember lecture effect , essence, difference receive treatment, ):","code":"\ndf <- data.frame(income = runif(10000)) %>%\n  # In this case, your health is determined randomly AND by your levels of income\n  mutate(health_no_pill = rnorm(10000) + income,\n         health_w_pill = health_no_pill + 1) %>%\n  # Now we give the pill only to people that have money\n  mutate(pill = income > .7,\n         health_obs = ifelse(pill==1,health_w_pill,health_no_pill))## mutate: new variable 'health_no_pill' (double) with 10,000 unique values and 0% NA\n##         new variable 'health_w_pill' (double) with 10,000 unique values and 0% NA\n## mutate: new variable 'pill' (logical) with 2 unique values and 0% NA\n##         new variable 'health_obs' (double) with 10,000 unique values and 0% NA\nhead(df,10)##       income health_no_pill health_w_pill  pill health_obs\n## 1  0.8155807      2.1372576     3.1372576  TRUE  3.1372576\n## 2  0.1808156      0.9304684     1.9304684 FALSE  0.9304684\n## 3  0.2590516      0.8958758     1.8958758 FALSE  0.8958758\n## 4  0.8961297     -0.3549424     0.6450576  TRUE  0.6450576\n## 5  0.9483955      2.4355475     3.4355475  TRUE  3.4355475\n## 6  0.8555458     -0.2672716     0.7327284  TRUE  0.7327284\n## 7  0.2599407      1.0285244     2.0285244 FALSE  1.0285244\n## 8  0.3590775     -0.3959288     0.6040712 FALSE -0.3959288\n## 9  0.5627617     -0.3818828     0.6181172 FALSE -0.3818828\n## 10 0.8223649      1.6642525     2.6642525  TRUE  2.6642525\ndf %>%\n  group_by(pill) %>%\n  summarize(health = mean(health_obs))## group_by: one grouping variable (pill)\n## summarize: now 2 rows and 2 columns, ungrouped## # A tibble: 2 × 2\n##   pill  health\n##   <lgl>  <dbl>\n## 1 FALSE  0.344\n## 2 TRUE   1.83\ndf %>%\n  filter(abs(income-.7)<.01) %>%\n  group_by(pill) %>%\n  summarize(health = mean(health_obs)) ## BOOM!!## filter: removed 9,827 rows (98%), 173 rows remaining\n## group_by: one grouping variable (pill)\n## summarize: now 2 rows and 2 columns, ungrouped## # A tibble: 2 × 2\n##   pill  health\n##   <lgl>  <dbl>\n## 1 FALSE  0.644\n## 2 TRUE   1.70"},{"path":"tutorial-1-getting-started-with-r-rstudio-and-rmarkdown.html","id":"tutorial-1-getting-started-with-r-rstudio-and-rmarkdown","chapter":"3 Tutorial 1: Getting Started with R, RStudio and RMarkdown","heading":"3 Tutorial 1: Getting Started with R, RStudio and RMarkdown","text":"tutorial created Hugo Machado John Santos (minor adaptations ).tutorial guide setting R RStudio, installing essential packages, learning basics RMarkdown, suggesting best practices help keep work organized find solutions common problems (definitely encounter).","code":""},{"path":"tutorial-1-getting-started-with-r-rstudio-and-rmarkdown.html","id":"installing-r-and-rstudio","chapter":"3 Tutorial 1: Getting Started with R, RStudio and RMarkdown","heading":"3.1 Installing R and RStudio","text":"R programming language ’ll using course. optimized statistics data analysis. Additionally, open source, easily customizable, popular academia, gives edge proprietary (e.g., Stata, SPSS) general purpose frameworks (e.g., Python) best language learn social scientists working data.Go R Project website: https://mirror.csclub.uwaterloo.ca/CRAN/Go R Project website: https://mirror.csclub.uwaterloo.ca/CRAN/link send CRAN mirror hosted University Waterloo.link send CRAN mirror hosted University Waterloo.Select appropriate link operating system (Windows, macOS, Linux).Select appropriate link operating system (Windows, macOS, Linux).Follow instructions download install R.\nmacOS users:\nMac Apple Silicon chip (M1, M2, M3, etc.), choose arm64 version.\nMac Intel chip, choose x86_64 version.\n\nNote: updating R, ’ll need reinstall packages. ’s good idea time right deadline.\nFollow instructions download install R.macOS users:\nMac Apple Silicon chip (M1, M2, M3, etc.), choose arm64 version.\nMac Intel chip, choose x86_64 version.\nmacOS users:Mac Apple Silicon chip (M1, M2, M3, etc.), choose arm64 version.Mac Intel chip, choose x86_64 version.Note: updating R, ’ll need reinstall packages. ’s good idea time right deadline.Note: updating R, ’ll need reinstall packages. ’s good idea time right deadline.","code":""},{"path":"tutorial-1-getting-started-with-r-rstudio-and-rmarkdown.html","id":"rstudio","chapter":"3 Tutorial 1: Getting Started with R, RStudio and RMarkdown","heading":"3.1.1 RStudio","text":"RStudio Integrated Development Environment (IDE) makes working R much easier user-friendly.Go RStudio Desktop download page: https://posit.co/download/rstudio-desktop/Download free version RStudio Desktop operating system.Follow instructions install RStudio.","code":""},{"path":"tutorial-1-getting-started-with-r-rstudio-and-rmarkdown.html","id":"a-quick-tour-of-the-rstudio-interface","chapter":"3 Tutorial 1: Getting Started with R, RStudio and RMarkdown","heading":"3.2 A Quick Tour of the RStudio Interface","text":"open RStudio, ’ll see four main panes:Source (top-left): write edit R code RMarkdown documents.Console (bottom-left): can run R code interactively see output.Environment/History (top-right): Environment tab shows objects (data, variables, functions) created. History tab shows commands run.Files/Plots/Packages/Help (bottom-right): pane several tabs:\nFiles: Allows browse manage files computer.\nPlots: Displays plots create.\nPackages: Shows installed R packages allows load/unload .\nHelp: Displays R documentation.\nFiles: Allows browse manage files computer.Plots: Displays plots create.Packages: Shows installed R packages allows load/unload .Help: Displays R documentation.can customize layout panes Tools > Global Options > Pane Layout.","code":""},{"path":"tutorial-1-getting-started-with-r-rstudio-and-rmarkdown.html","id":"r-working-directory","chapter":"3 Tutorial 1: Getting Started with R, RStudio and RMarkdown","heading":"3.3 R Working Directory","text":"working directory folder R look files save output default. Issues conflicting working directories common, especially multiple folders different projects. best practices deal .Using setwd(): can use setwd() function set working directory. example, setwd(\"~/Documents/R Projects/MyProject\") sets working directory “MyProject” folder within “R Projects” folder “Documents” directory. can also open new script (tab top left), right-click tab, tell R “Set working directory” wherever script located. working external data files (e.g., .dta database, example), data need folder script working .Using RStudio Interface: can also set working directory RStudio menu: “Session” > “Set Working Directory” > “Choose Directory…”.R Projects: better organization, consider creating R Projects assignments. R Project special type working directory makes easier manage code, data, output. can create new project going “File” > “New Project…”. RStudio automatically set working directory project folder. information working projects, consult guide: https://support.posit.co/hc/en-us/articles/200526207-Using-RStudio-Projects","code":""},{"path":"tutorial-1-getting-started-with-r-rstudio-and-rmarkdown.html","id":"introduction-to-rmarkdown","chapter":"3 Tutorial 1: Getting Started with R, RStudio and RMarkdown","heading":"3.4 Introduction to RMarkdown","text":"RMarkdown file format allows combine R code, output (e.g., tables, plots), text single document. ’s powerful tool creating reproducible reports assignments. can also use write HTML render PDFs. However, can little finicky intuitive write , compared common word processors like MSWord Google Docs, takes practice (patience) get place feel comfortable writing .","code":""},{"path":"tutorial-1-getting-started-with-r-rstudio-and-rmarkdown.html","id":"why-use-rmarkdown","chapter":"3 Tutorial 1: Getting Started with R, RStudio and RMarkdown","heading":"3.4.1 Why Use RMarkdown?","text":"Reproducibility: code, output, text one place, making easy reproduce analysis.Clarity: can interweave code explanations narrative, making work easier understand.Efficiency: can generate different output formats (HTML, PDF, Word) RMarkdown file. outputs also look pretty nice.","code":""},{"path":"tutorial-1-getting-started-with-r-rstudio-and-rmarkdown.html","id":"basic-rmarkdown-syntax","chapter":"3 Tutorial 1: Getting Started with R, RStudio and RMarkdown","heading":"3.4.2 Basic RMarkdown Syntax","text":"Code Chunks: R code enclosed “chunks” start ```{r} end ```.\n\n# R code chunk\nx <- 10\ny <- 20\nx + yCode Chunks: R code enclosed “chunks” start ```{r} end ```.Headers: can create headers using #, ##, ###, etc. number # determines level header.Headers: can create headers using #, ##, ###, etc. number # determines level header.Text Formatting: can format text using Markdown syntax. example:\nItalic: *italic*\nBold: **bold**\nCode: `code`\nLinks: [Link Text](URL)\nText Formatting: can format text using Markdown syntax. example:Italic: *italic*Bold: **bold**Code: `code`Links: [Link Text](URL)","code":"\n# This is an R code chunk\nx <- 10\ny <- 20\nx + y"},{"path":"tutorial-1-getting-started-with-r-rstudio-and-rmarkdown.html","id":"creating-an-rmarkdown-file","chapter":"3 Tutorial 1: Getting Started with R, RStudio and RMarkdown","heading":"3.4.3 Creating an RMarkdown File","text":"RStudio, go “File” > “New File” > “R Markdown…”.Choose title author name.Select desired output format (e.g., HTML, PDF).Click “OK”.RStudio create new RMarkdown file example content. can edit file, add code text, “knit” generate output document.","code":""},{"path":"tutorial-1-getting-started-with-r-rstudio-and-rmarkdown.html","id":"knitting","chapter":"3 Tutorial 1: Getting Started with R, RStudio and RMarkdown","heading":"3.4.4 Knitting","text":"“Knitting” process converting RMarkdown file output document. knit document, click “Knit” button top Source pane. can choose output format dropdown menu next “Knit” button.","code":""},{"path":"tutorial-1-getting-started-with-r-rstudio-and-rmarkdown.html","id":"rmarkdown-cheatsheet","chapter":"3 Tutorial 1: Getting Started with R, RStudio and RMarkdown","heading":"3.4.5 RMarkdown cheatsheet:","text":"useful quick guide can use help formatting related tasks: https://rstudio.github.io/cheatsheets/html/rmarkdown.html","code":""},{"path":"tutorial-1-getting-started-with-r-rstudio-and-rmarkdown.html","id":"installing-r-packages","chapter":"3 Tutorial 1: Getting Started with R, RStudio and RMarkdown","heading":"3.5 Installing R Packages","text":"R packages extend functionality base R. progress course, ’ll use several packages help perform different tasks related statistical analysis. need install packages , need load new session.basic packages use go installing .Experienced: experience R, might interested exploring pacman package. provides convenient way manage packages, allowing load, install, update packages using single function, p_load(). example, instead repeated install.packages operations , pacman installed use one line like: pacman::p_load(devtools, remotes, foreign, readstata13, rio, labelled, sjlabelled, tidyverse, fixest, wooldridge, modelsummary, stargazer, ggplot2, knitr, kableExtra, markdown, car, carData, lmtest, sandwich, survey, srvyr). Using pacman may also automatically install packages CRAN, Bioconductor GitHub, according latest version . ’re interested, can learn pacman CRAN page. However, course, using standard install.packages() method sufficient.","code":"\n# Install packages for data import/export:\ninstall.packages(\"foreign\")\ninstall.packages(\"rio\")\n\n# Install tidyverse, a collection of packages for data science:\ninstall.packages(\"tidyverse\")\n\n# Install wooldridge, which contains datasets you will use for the assignments:\ninstall.packages(\"wooldridge\")\n\n# Install knitr and markdown for improved RMarkdown functionality:\ninstall.packages(\"knitr\")\ninstall.packages(\"markdown\")"},{"path":"tutorial-1-getting-started-with-r-rstudio-and-rmarkdown.html","id":"using-ai-tools-to-assist-with-r-programming","chapter":"3 Tutorial 1: Getting Started with R, RStudio and RMarkdown","heading":"3.6 Using AI Tools to Assist with R Programming","text":"Large Language Models (LLMs) related AI tools, ChatGPT, Copilot Gemini, can valuable assistants learning using R. used correctly, can save lot time, especially debugging finding ways performing specific tasks ’re really familiar . However, ’s crucial use responsibly ethically. general tips using tools.","code":""},{"path":"tutorial-1-getting-started-with-r-rstudio-and-rmarkdown.html","id":"how-ai-can-help","chapter":"3 Tutorial 1: Getting Started with R, RStudio and RMarkdown","heading":"3.6.1 How AI Can Help","text":"Code Suggestions Auto-Completion: AI tools like GitHub Copilot can suggest code snippets type, helping write code faster fewer errors. also hallucinate times, mindful suggesting. ’m big fan auto-complete, ’s usually better either ask something specific ask edits base code ’ve already written.Debugging Assistance: encounter error, AI can help explain error message means suggest potential solutions. Just copy paste error message (relevant excerpt), tell wanted , ask causing error.Understanding Functions Packages: AI can provide explanations R functions work, arguments take, use effectively. Check documentation make sure LLMs telling something mark.Learning New Concepts: can ask AI explain statistical concepts R programming topics way ’s easy understand. Documentation references StackOverflow can bit cryptic.Finding Relevant Documentation: AI can help locate relevant documentation R packages functions.Generating Code Specific Tasks: can describe task want accomplish, AI can generate R code perform task. better informed prompt , better output get. models typically better contained, well-defined, tasks broad tasks underspecified.","code":""},{"path":"tutorial-1-getting-started-with-r-rstudio-and-rmarkdown.html","id":"limitations-and-ethical-considerations","chapter":"3 Tutorial 1: Getting Started with R, RStudio and RMarkdown","heading":"3.6.2 Limitations and Ethical Considerations","text":"Critical Thinking Essential: AI tool, replacement understanding. Always critically evaluate code generated AI. Make sure understand works using .Don’t Blindly Copy Paste: Avoid copying pasting code without understanding . can lead errors lack comprehension.Avoid Plagiarism: transparent use AI. Properly cite AI-generated code ideas assignments. instructors need know work came AI assistance.AI Makes Mistakes: AI perfect. can generate incorrect inefficient code. Always test code thoroughly.","code":""},{"path":"tutorial-1-getting-started-with-r-rstudio-and-rmarkdown.html","id":"prompt-engineering-tips","chapter":"3 Tutorial 1: Getting Started with R, RStudio and RMarkdown","heading":"3.6.3 Prompt Engineering Tips","text":"Specific Clear: specific prompts, better AI understand request.Provide Context: ’re asking specific piece code, include relevant code prompt.Break Complex Tasks: complex task, break smaller, manageable steps.Iterate Refine: AI doesn’t give answer ’re looking , try rephrasing prompt providing information.","code":""},{"path":"tutorial-1-getting-started-with-r-rstudio-and-rmarkdown.html","id":"example","chapter":"3 Tutorial 1: Getting Started with R, RStudio and RMarkdown","heading":"3.6.4 Example","text":"’s example use AI tool help generate plot:Prompt: “data frame called mydata columns x y. can create scatterplot y x using ggplot2, blue points red trend line?”AI-Generated Code (example):Remember: still need load ggplot2 package (library(ggplot2)) data frame mydata loaded R environment code work.","code":"\nggplot(mydata, aes(x = x, y = y)) +\n  geom_point(color = \"blue\") +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"red\")"},{"path":"tutorial-1-getting-started-with-r-rstudio-and-rmarkdown.html","id":"quick-example-importing-and-checking-data-from-wooldridge","chapter":"3 Tutorial 1: Getting Started with R, RStudio and RMarkdown","heading":"3.7 Quick Example: Importing and Checking Data from wooldridge","text":"Let’s load dataset wooldridge package take quick look . ’ll use wage1 dataset, contains information wages individual characteristics.Explanation:library(wooldridge): Loads wooldridge package, making datasets available.data(\"wage1\"): Loads wage1 dataset R environment.head(wage1): Displays first six rows dataset, allowing see variable names sample data.\nExercise: Try changing number inside parentheses head() function display different number rows.\nExercise: Try changing number inside parentheses head() function display different number rows.summary(wage1): Provides descriptive statistics variable dataset (e.g., mean, median, min, max, quartiles).str(wage1): Shows structure dataset, including data type variable (e.g., numeric, integer, factor).","code":"\n# Load the wooldridge package\nlibrary(wooldridge)\n\n# Load the wage1 dataset\ndata(\"wage1\")\n\n# Display the first few rows of the dataset\nhead(wage1)\n\n# Get a summary of the dataset\nsummary(wage1)\n\n# Get the structure of the dataset\nstr(wage1)"},{"path":"tutorial-1-getting-started-with-r-rstudio-and-rmarkdown.html","id":"getting-help-in-r","chapter":"3 Tutorial 1: Getting Started with R, RStudio and RMarkdown","heading":"3.8 Getting Help in R","text":"several ways get help R:? help(): access documentation specific function, type ? followed function name (e.g., ?mean). can also use help(mean).?? help.search(): search help topics related keyword, use ?? followed keyword (e.g., ??regression). can also use help.search(\"regression\").Online Resources: R community active online. Websites like Stack Overflow (https://stackoverflow.com/questions/tagged/r) great places find answers common R questions.Package Vignettes: Many R packages include vignettes, longer, tutorial-style documents demonstrate use package. can access using browseVignettes() function.Package Websites: packages dedicated websites additional resources, tutorials, articles, examples. can typically found searching package name followed “R package” search engine.","code":""},{"path":"tutorial-1-getting-started-with-r-rstudio-and-rmarkdown.html","id":"style-guides-in-r","chapter":"3 Tutorial 1: Getting Started with R, RStudio and RMarkdown","heading":"3.9 Style Guides in R","text":"Coding style guides sets conventions prescribe code formatted written. Following style guide can make code readable, maintainable, consistent.","code":""},{"path":"tutorial-1-getting-started-with-r-rstudio-and-rmarkdown.html","id":"the-tidyverse-style-guide","chapter":"3 Tutorial 1: Getting Started with R, RStudio and RMarkdown","heading":"3.9.1 The tidyverse Style Guide","text":"tidyverse style guide, developed Hadley Wickham RStudio team, widely used style guide R. covers various aspects coding style, including:File namesObject namesSyntaxSpacingControl flowCommentsYou can find tidyverse style guide : https://style.tidyverse.org/. Note: try follow guide, incredibly good .","code":""},{"path":"tutorial-1-getting-started-with-r-rstudio-and-rmarkdown.html","id":"quick-examples","chapter":"3 Tutorial 1: Getting Started with R, RStudio and RMarkdown","heading":"3.9.2 Quick Examples","text":"examples tidyverse style guidelines:File Names: Use .R extension R script files .Rmd R Markdown files. File names meaningful use lowercase letters, numbers, underscores (e.g., process_data.R, analysis_report.Rmd).Object Names: Use lowercase underscores separate words (e.g., my_variable, data_frame). descriptive concise.Spacing: Place spaces around operators (e.g., x + y, x+y) commas (e.g., mean(x, na.rm = TRUE), mean(x,na.rm=TRUE)).Indentation: Use two spaces indentation. use tabs.","code":""},{"path":"tutorial-1-getting-started-with-r-rstudio-and-rmarkdown.html","id":"other-style-guides","chapter":"3 Tutorial 1: Getting Started with R, RStudio and RMarkdown","heading":"3.9.3 Other Style Guides","text":"tidyverse style guide popular, style guides might encounter choose follow, :Google’s R Style Guide: https://google.github.io/styleguide/Rguide.htmlThe Bioconductor Style Guide: https://contributions.bioconductor.org/Ultimately, important thing consistent style, regardless guide choose follow. style guides agree basic principles writing clear readable code.","code":""},{"path":"tutorial-1-getting-started-with-r-rstudio-and-rmarkdown.html","id":"protips-for-r-success","chapter":"3 Tutorial 1: Getting Started with R, RStudio and RMarkdown","heading":"3.10 Protips for R Success","text":"","code":""},{"path":"tutorial-1-getting-started-with-r-rstudio-and-rmarkdown.html","id":"enable-helpful-rstudio-options","chapter":"3 Tutorial 1: Getting Started with R, RStudio and RMarkdown","heading":"3.10.1 Enable Helpful RStudio Options","text":"options can make coding experience pleasant efficient:Highlight R function calls: Go “Tools” > “Global Options” > “Code” > “Display” check “Highlight R function calls.” visually distinguish function names code.Rainbow parentheses: “Display” settings, check “Rainbow parentheses.” color-code matching parentheses, making easier track nested functions.Use dark theme: find staring screen long periods, dark theme can help reduce eye strain. Go “Tools” > “Global Options” > “Appearance” choose dark theme “Editor Theme” options.","code":""},{"path":"tutorial-1-getting-started-with-r-rstudio-and-rmarkdown.html","id":"good-coding-practices","chapter":"3 Tutorial 1: Getting Started with R, RStudio and RMarkdown","heading":"3.10.2 Good Coding Practices","text":"Organization: Use clear directory structure projects. Keep data, code, output separate folders.Comments: Explain code using comments (lines starting #). Focus explaining behind code, just .Readability: Use consistent spacing indentation make code easy read. RStudio can help automatically indenting code.Section Headings: Use # create section headings organize R scripts. number # determines level heading (e.g., # top-level heading, ## subheading, etc.).Don’t Overwrite: Avoid overwriting original variables. Create new variables need modify data.Backups: Regularly back work. Save reusable code snippets future use. larger projects, consider using separate R scripts different tasks (e.g., data cleaning, analysis, reporting).Coding Language: Learning code like learning new language. takes time practice. patient .Precision: Approach analysis care attention detail. Avoid rushing, especially tired.","code":""},{"path":"tutorial-1-getting-started-with-r-rstudio-and-rmarkdown.html","id":"solutions-to-common-problems","chapter":"3 Tutorial 1: Getting Started with R, RStudio and RMarkdown","heading":"3.10.3 Solutions to Common Problems","text":"Knitting Issues:\nRestart RStudio try knitting .\nCheck special characters (e.g., Greek letters) might causing problems.\nMake sure PDF file (’re knitting PDF) open another program.\nDelete temporary .md .tex files created knitting process.\nConsider disabling “use tinytex compiling .tex files” “Tools” > “Global Options” > “Sweave” ’re issues TinyTeX.\nRestart RStudio try knitting .Check special characters (e.g., Greek letters) might causing problems.Make sure PDF file (’re knitting PDF) open another program.Delete temporary .md .tex files created knitting process.Consider disabling “use tinytex compiling .tex files” “Tools” > “Global Options” > “Sweave” ’re issues TinyTeX.Error Messages:\nCarefully check function arguments. enter correctly right order?\nPay attention capitalization use quotes.\nencounter naming conflicts (e.g., dplyr::recode() vs. car::recode()), specify package want use (e.g., dplyr::recode()).\nCarefully check function arguments. enter correctly right order?Pay attention capitalization use quotes.encounter naming conflicts (e.g., dplyr::recode() vs. car::recode()), specify package want use (e.g., dplyr::recode()).Model Problems:\nDouble-check ’re using correct variables model.\nReview recoding steps performed. make mistakes might affecting results?\nDouble-check ’re using correct variables model.Review recoding steps performed. make mistakes might affecting results?","code":""},{"path":"lecture-3-core-concepts-of-experimental-design.html","id":"lecture-3-core-concepts-of-experimental-design","chapter":"4 Lecture 3: Core Concepts of Experimental Design","heading":"4 Lecture 3: Core Concepts of Experimental Design","text":"","code":""},{"path":"lecture-3-core-concepts-of-experimental-design.html","id":"slides-2","chapter":"4 Lecture 3: Core Concepts of Experimental Design","heading":"Slides","text":"3 Introduction Causal Inference (link)","code":""},{"path":"lecture-3-core-concepts-of-experimental-design.html","id":"introduction-2","chapter":"4 Lecture 3: Core Concepts of Experimental Design","heading":"4.1 Introduction","text":"lecture look (slightly) technical understanding selection bias (understand problem observational data) potential outcomes approach (understand random assignment solves problem).lecture slide displayed full :","code":""},{"path":"lecture-3-core-concepts-of-experimental-design.html","id":"vignette-3.1","chapter":"4 Lecture 3: Core Concepts of Experimental Design","heading":"4.2 Vignette 3.1","text":"Liebman, Jeffrey B., Erzo FP Luttmer. “people behave differently better understood social security? Evidence field experiment.” American Economic Journal: Economic Policy 7.1 (2015): 275-99.variable interest (DV, Y) paid_work_yes: whether person worked . treatment variable treat: whether got pamphlet . experiment, can compare averages treatment group control group estimate causal effect.effect reported authors!! can also estimate differences gender (?):Treatment effect women… ?averages look great can sure effects mere coincidence product randomization? Let’s add confidence intervals:now gender;Cool…","code":"\nlibrary(tidyverse) # for wrangling data\nlibrary(tidylog) # to know what we are wrangling\nlibrary(sjPlot) # to plot some models\nlibrary(readstata13) # to load .dta files\nexp_data %>%\n  group_by(treat) %>% \n  summarise(ATE = mean(paid_work_yes, na.rm = T))\nexp_data %>%\n  group_by(female,treat) %>% \n  summarise(ATE = mean(paid_work_yes, na.rm = T))\nexp_data$treat <- as.factor(exp_data$treat)\nexp_data$female <- as.factor(exp_data$female)\n\n# Full model\nmodel_1 <- lm(paid_work_yes ~ treat, data = exp_data)\nsummary(model_1)\n\nplot_model(model_1, type = \"pred\", terms = \"treat\") +\n  theme_minimal() +\n  labs(x=\"Treatment\", y=\"Worked +1 Year\")\n# Model by gender\nmodel_2 <- lm(paid_work_yes ~ female + treat + female*treat, data = exp_data)\nsummary(model_2)\n\nplot_model(model_2, type = \"int\") +\n  theme_minimal() +\n  labs(x=\"Women\", y=\"Worked +1 Year\", color = \"Treatment\")"},{"path":"blocks.html","id":"blocks","chapter":"5 Blocks","heading":"5 Blocks","text":"","code":""},{"path":"blocks.html","id":"equations","chapter":"5 Blocks","heading":"5.1 Equations","text":"equation.\\[\\begin{equation}\n  f\\left(k\\right) = \\binom{n}{k} p^k\\left(1-p\\right)^{n-k}\n  \\tag{5.1}\n\\end{equation}\\]may refer using \\@ref(eq:binom), like see Equation (5.1).","code":""},{"path":"blocks.html","id":"theorems-and-proofs","chapter":"5 Blocks","heading":"5.2 Theorems and proofs","text":"Labeled theorems can referenced text using \\@ref(thm:tri), example, check smart theorem 5.1.Theorem 5.1  right triangle, \\(c\\) denotes length hypotenuse\n\\(\\) \\(b\\) denote lengths two sides, \n\\[^2 + b^2 = c^2\\]Read https://bookdown.org/yihui/bookdown/markdown-extensions--bookdown.html.","code":""},{"path":"blocks.html","id":"callout-blocks","chapter":"5 Blocks","heading":"5.3 Callout blocks","text":"R Markdown Cookbook provides help use custom blocks design callouts: https://bookdown.org/yihui/rmarkdown-cookbook/custom-blocks.html","code":""},{"path":"sharing-your-book.html","id":"sharing-your-book","chapter":"6 Sharing your book","heading":"6 Sharing your book","text":"","code":""},{"path":"sharing-your-book.html","id":"publishing","chapter":"6 Sharing your book","heading":"6.1 Publishing","text":"HTML books can published online, see: https://bookdown.org/yihui/bookdown/publishing.html","code":""},{"path":"sharing-your-book.html","id":"pages","chapter":"6 Sharing your book","heading":"6.2 404 pages","text":"default, users directed 404 page try access webpage found. ’d like customize 404 page instead using default, may add either _404.Rmd _404.md file project root use code /Markdown syntax.","code":""},{"path":"sharing-your-book.html","id":"metadata-for-sharing","chapter":"6 Sharing your book","heading":"6.3 Metadata for sharing","text":"Bookdown HTML books provide HTML metadata social sharing platforms like Twitter, Facebook, LinkedIn, using information provide index.Rmd YAML. setup, set url book path cover-image file. book’s title description also used.gitbook uses social sharing data across chapters book- links shared look .Specify book’s source repository GitHub using edit key configuration options _output.yml file, allows users suggest edit linking chapter’s source file.Read features output format :https://pkgs.rstudio.com/bookdown/reference/gitbook.htmlOr use:","code":"\n?bookdown::gitbook"},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"","code":""}]
